/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/Application.java to edit this template
 */
package forms;

import DTOS.ClientesDTO;
import UTILERIAS.ButtonEditor;
import UTILERIAS.ButtonRenderer;
import UTILERIAS.CustomOptionPane;
import entidades.EmpleadoEntidad;
import enumeradores.AccionCatalogoEnumerador;
import java.awt.Component;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.AbstractCellEditor;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import persistencia.IClientesDAO;
import utilerias.JButtonCellEditor;

/**
 *
 * @author lv1822
 */
public class TABLA extends javax.swing.JFrame {

    private DefaultTableModel dtm;
    private Object[] o = new Object[3];
    
    
    
    private final IClientesDAO clienteDAO;
    private int pagina = 1;
    private int limite = 2;

    public TABLA(IClientesDAO empleadoDAO) {
        initComponents();

        this.clienteDAO = empleadoDAO;
        
        dtm = (DefaultTableModel)tableClientes.getModel();
        
        // Obtén el modelo de la tabla
        tableClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int column = tableClientes.getColumnModel().getColumnIndexAtX(evt.getX());
                int row = evt.getY() / tableClientes.getRowHeight();

                // Verifica si se hizo clic en la columna de botones "Actualizar"
                if (column == tableClientes.getColumn("Actualizar").getModelIndex() && row < tableClientes.getRowCount()) {
                    // Puedes acceder a los datos de la fila haciendo algo como esto:
                    int id = (Integer) tableClientes.getValueAt(row, 0);
                    String nombres = (String) tableClientes.getValueAt(row, 1);
                    String apellidoPaterno = (String) tableClientes.getValueAt(row, 2);
                    String apellidoMaterno = (String) tableClientes.getValueAt(row, 3);

                    ClientesDTO cliente = new ClientesDTO();
                    EmpleadoEntidad empleado = new EmpleadoEntidad();
                    
                    empleado.setId(id);
                    empleado.setNombres(nombres);
                    empleado.setPaterno(apellidoPaterno);
                    empleado.setMaterno(apellidoMaterno);
                    empleado.setTipo(AccionCatalogoEnumerador.EDITAR);
                    
                    Agregar agregar = new Agregar(AccionCatalogoEnumerador.EDITAR, empleado);
                    agregar.setVisible(true);

                    
                }
                if (column == tableClientes.getColumn("Eliminar").getModelIndex() && row < tableClientes.getRowCount()) {
                    // Puedes acceder a los datos de la fila haciendo algo como esto:
                    int id = (Integer) tableClientes.getValueAt(row, 0);
                    String nombres = (String) tableClientes.getValueAt(row, 1);
                    String apellidoPaterno = (String) tableClientes.getValueAt(row, 2);
                    String apellidoMaterno = (String) tableClientes.getValueAt(row, 3);

                    ClientesDTO cliente = new ClientesDTO();
                    cliente.setId(id);
                    cliente.setNombres(nombres);
                    cliente.setPaterno(apellidoPaterno);
                    cliente.setMaterno(apellidoMaterno);
                   
                    // Muestra los datos en un cuadro de diálogo
                    CustomOptionPane customOptionPane = new CustomOptionPane();
                    customOptionPane.showCustomOptionPane(cliente);
                }
            }
});
        
        imprimirDatos();
//        this.MetodosIniciales();
    }
    
    /**
     * Creates new form TABLA
     */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableClientes = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        tableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombres", "Apellido paterno", "Apellido materno", "Eliminar", "Actualizar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableClientes);

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 785, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAgregar)
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(btnAgregar)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void imprimirDatos(){
        
        String CADENA_CONEXION = "jdbc:mysql://localhost/ProyectoBaseAvanzada";
        String USUARIO = "root";
        String CONTRASEÑA = "amosmysql";
        
        try (Connection connection = DriverManager.getConnection(CADENA_CONEXION, USUARIO, CONTRASEÑA)) {
            // Consulta SQL para obtener datos (reemplaza "tu_tabla" con el nombre de tu tabla)
            String sql = "SELECT * FROM empleado WHERE estatus = 1";
            try (PreparedStatement statement = connection.prepareStatement(sql)) {
                // Ejecutar la consulta y obtener resultados
                try (ResultSet resultSet = statement.executeQuery()) {
                    // Crear un modelo de tabla
                    DefaultTableModel model = new DefaultTableModel();

                    // Obtener metadatos (nombres de columnas)
                    int columnCount = resultSet.getMetaData().getColumnCount();
                    for (int i = 1; i <= columnCount; i++) {
                        model.addColumn(resultSet.getMetaData().getColumnName(i));
                    }

                    // Agregar filas al modelo
                    while (resultSet.next()) {
                        Object[] row = new Object[columnCount];
                        for (int i = 1; i <= columnCount; i++) {
                            row[i - 1] = resultSet.getObject(i);
                        }
                        model.addRow(row);
                    }

                    // Establecer el modelo en el JTable
                    tableClientes.setModel(model);
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
    }
    
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        EmpleadoEntidad empleado = new EmpleadoEntidad();
        
        Agregar agregar = new Agregar(AccionCatalogoEnumerador.NUEVO, empleado);
        agregar.setVisible(true);
        
    }//GEN-LAST:event_btnAgregarActionPerformed
//
//    public void setEmpleado(EmpleadoEntidad empleadoReturn){
//        
//        empleado = empleadoReturn;
//        
//    }
    
    
    private void tableClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableClientesMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tableClientesMouseClicked

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        
        imprimirDatos();
        
    }//GEN-LAST:event_formWindowGainedFocus


    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TABLA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TABLA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TABLA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TABLA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
              
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableClientes;
    // End of variables declaration//GEN-END:variables

}
